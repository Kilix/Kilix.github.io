---
---
![RSE](http://agile4manager.com/wp-content/uploads/2014/09/rse.jpg)

Lorsque vous êtes ScrumMaster, l’une des plus grandes difficultés est la responsabilisation de l’équipe technique. Pour ma part, l’environnement dans le lequel j’évolue est complexe avec peu d’adhérence avec l’ agilité. L’une des contraintes les plus fortes se situe dans la gestion de projets en mode forfaitaire.

L’engagement de l’équipe de développement devient alors stratégique et vital à la réussite de nos projets.

Bien souvent, il est complexe d’engager l’équipe lorsque le product owner n’est pas expérimenté. De nombreuses dérives apparaissent :

* Perte de motivation devant des soucis de spécification
* US mal livrées dans leur environnement de test et mal recettées
* etc…

Évidemment, toutes ces problématiques nuit à la productivité et augmentent les frustrations.

Chez Kilix, je suis dans un environnement de production de projets Agile au forfait ( délais/coût/périmètre à respect contractuellement) avec un bien souvent des products owner qui n’en sont pas. L’envie de désigner des proxy PO est souvent très proche. J’ai déjà eu l’occasion de le subir. Bien souvent, il s’agit de la pire étape pour déresponsabiliser l’ensemble de l’équipe de ses engagements.

Il m’a semblé logique de prendre une mesure impopulaire (comme beaucoup au début) : distribuer la responsabilité des user stories dès leur création dans le backlog aux développeurs.

Évidemment, la stratégie n’était pas définitive, mais soumise à l’approbation de l’équipe dans la durée avec feeback et amélioration continue.

Ci dessous, une vision macro de ces tâches sous forme de workflow :

1. **VALIDATION**: La première tâche du responsable est de valider que l’US réponde bien au DOR ( Définition Of Ready ) tout en ayant des spécifications claires. Le but de cette étape est de s’assurer que l’US est analysable lors du planning poker.
2. **SUIVI**: Le responsable assure les merges des tâches composant l’US après validation d’un pull request.
3. **DÉPLOIEMENT**: Vérifier que l’US fonctionne bien sur l’environnement de recette en respectant le DOD (définition of done)
4. **ANOMALIE**: Suivi des remontées d’anomalie
5. **DÉMONSTRATION**: Le responsable doit démontrer son US lors de la démonstration (activité SCRUM)

L’application de ce workflow à pour avantage:

* Fluidifier le worflow global des US
* Amplifier la responsabilisation naturelle
* Maîtriser fonctionnelle du produit
* Créer une assistance naturelle au product owner
* Augmenter le nombre de propositions d’optimisation de la part de l’équipe de développement
* Synergie humaine et “technico fonctionnelle”.

Nous sommes encore au début de l’application de ce nouveau rôle, mais les répercussions sont dès aujourd’hui importantes et très positives.
Mes équipes de développement ont pris la mesure de ce rôle et constatent eux même son intérêt.

Par le biais des rétrospectives, ce nouveau rôle sera amélioré et deviendra certainement incontournable.
L’agilité permet de s’adapter aux différentes contraintes de son environnement.
Profitons-en et innovons ensemble ! :)
